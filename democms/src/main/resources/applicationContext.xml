<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:lang="http://www.springframework.org/schema/lang" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	         http://www.springframework.org/schema/beans/spring-beans.xsd
	         http://www.springframework.org/schema/lang
	         http://www.springframework.org/schema/lang/spring-lang.xsd      
	         http://www.springframework.org/schema/tx   
	         http://www.springframework.org/schema/tx/spring-tx.xsd    
	         http://www.springframework.org/schema/aop     
	         http://www.springframework.org/schema/aop/spring-aop.xsd    
	         http://www.springframework.org/schema/mvc     
	         http://www.springframework.org/schema/mvc/spring-mvc.xsd   
	         http://www.springframework.org/schema/context     
	         http://www.springframework.org/schema/context/spring-context.xsd
	         http://www.springframework.org/schema/cache
	         http://www.springframework.org/schema/cache/spring-cache.xsd
	         http://www.springframework.org/schema/task 
	         http://www.springframework.org/schema/task/spring-task.xsd">
	 <context:component-scan base-package="com.demo.cms"></context:component-scan>  
	 <mvc:annotation-driven></mvc:annotation-driven> 
	
	 <tx:annotation-driven/>
	 <task:annotation-driven/>
	 <cache:annotation-driven/>
	 <mvc:resources location="/WEB-INF/static/" mapping="/static/**" cache-period="31556926"></mvc:resources>     
	 <mvc:resources location="/upload/" mapping="/upload/**" cache-period="31556926"></mvc:resources>        
	 
	 <mvc:interceptors>
	 	<mvc:interceptor>
	 		<mvc:mapping path="/**"/>
	 		<bean class="com.demo.cms.filter.GlobalInterceptor"></bean>
	 	</mvc:interceptor>
	 </mvc:interceptors>
	 <!-- spring自己的缓存管理器配置 -->
     <bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
     	<property name="caches">
     		<set>
     			<bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" p:name="default"></bean>
     			<bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" p:name="config"></bean>
     			<bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" p:name="folder"></bean>
     			<bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" p:name="article"></bean>
     			<bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" p:name="media"></bean>
     		</set>
     	</property>
     </bean> 
     
     <bean id="propertyConfigurer" class="com.demo.cms.util.PropertyUtils">
     	<property name="locations">
     		<list>
     			<value>classpath:configure.properties</value>
     		</list>
     	</property>
     	<property name="ignoreUnresolvablePlaceholders" value="true" />
     </bean>
     <!-- 配置数据源 -->
     <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
     	<property name="driverClassName" value="${jdbc.driverClass}"></property>
     	<property name="url" value="${jdbc.url}"></property>
     	<property name="username" value="${jdbc.username}"></property>
     	<property name="password" value="${jdbc.password}"></property>
     </bean>
     <!-- 创建SessionFactory -->
     <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
     	<property name="dataSource" ref="dataSource"></property>
     </bean>
     <!-- 配置事务管理 -->
      <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
      	<property name="dataSource" ref="dataSource"></property>
      </bean>
      <!-- 创建数据映射器 -->
      <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
      	<property name="annotationClass" value="org.springframework.stereotype.Repository"></property>
      	<property name="basePackage" value="com.demo.cms.dao"></property>
      </bean>
      <!-- 解析视图 -->
      <!--  
      <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
      	<property name="prefix" value="/WEB-INF/"></property>
      	<property name="suffix" value=".jsp"/>
      </bean>
      -->
      
      <!-- 配置FreeMarker -->
      <bean id="freeMarkerConfigrer" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPaths" value="/WEB-INF/static/"></property>      
		<property name="defaultEncoding" value="UTF-8"></property>
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">10</prop>
				<prop key="defaultEncoding">UTF-8</prop>
				<prop key="url_escaping_charset">UTF-8</prop>
				<prop key="locale">zh_CN</prop>
				<prop key="boolean_format">true,false</prop>
				<prop key="time_format">HH:mm:ss</prop>
				<prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
				<prop key="date_format">yyyy-MM-dd</prop>
				<prop key="number_format">#.##</prop>
				<prop key="whitespace_stripping">true</prop>
			</props>
		</property>
      </bean>
      <!-- 用FreeMarker解析视图 -->
      <bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
      	<property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView"></property>
      	<property name="cache" value="false"></property>
      	<property name="prefix" value=""></property>
      	<property name="suffix" value=".ftl"></property>
      	<property name="contentType" value="text/html;charset=utf-8"></property>
      	<property name="exposeRequestAttributes" value="true"></property>
      	<property name="exposeSessionAttributes" value="true"></property>
      	<property name="exposeSpringMacroHelpers" value="true"></property>
      </bean>
      
      <!-- 登陆验证码设置 -->
      <bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
      	<property name="config">
      		<bean class="com.google.code.kaptcha.util.Config">
      			<constructor-arg type="java.util.Properties">
      				<props>
      					<!--  验证码图片长度-->
      					<prop key="kaptcha.image.width">150</prop>
      					<!--  验证码图片高度-->
      					<prop key="kaptcha.image.height">40</prop>
      					<!--  验证码是否有边框，默认为true-->
      					<prop key="kaptcha.border">no</prop>
      					<!--  验证码内容字符范围，默认为adcde2345679gfynmnpwx-->
      					<prop key="kaptcha.textproducer.char.string">abcdefhkmpstuvwy345678</prop>
      					<!--  验证码字符长度，默认为5-->
      					<prop key="kaptcha.textproducer.char.length">5</prop>
      					<!--  验证码字符之间空格数，默认为2-->
      					<prop key="kaptcha.textproducer.char.space">4</prop>
      					<!--  验证码文本字符颜色，默认为black-->
      					<prop key="kaptcha.textproducer.font.color">green</prop>
      					<!--  验证码文本字符大小，默认为40-->
      					<prop key="kaptcha.textproducer.font.size">25</prop>
      					<!--  验证码文本字符字体,默认为Arial,Courier-->
      					<prop key="kaptcha.textproducer.font.names">微软雅黑</prop>
      					<!--  验证码背景颜色渐进-->
      					<prop key="kaptcha.background.clear.from">black</prop>
      					<prop key="kaptcha.background.clear.to">white</prop>
      					<!--  验证码样式引擎-->
      					<prop key="kaptcha.obscurificator.impl">com.google.code.kaptcha.impl.ShadowGimpy</prop>
      					<!--  验证码噪点生成对象，默认DefaultNoise
      					<prop key="kaptcha.noise.impl">com.google.code.kaptcha.impl.NoNoise</prop>
      					-->
      					<!--  验证码干扰颜色 -->
      					<prop key="kaptcha.noise.color">red</prop>
      				</props>
      			</constructor-arg>
      		</bean>
      	</property>
      </bean>
      
      <!-- 文件上传配置，需要上传附件的form,需要设置enctype="multipart/form-data"，因此如果不配置该bean，action获取不到form属性而报错，切记！！！ -->
      <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
      	<!-- 文件最大值，单位字节 -->
      	<property name="maxUploadSize" value="9048000"></property>
      	<property name="resolveLazily" value="true"></property>
      </bean>
      
      
     <!-- 引入jedis的properties配置文件 -->
    <!--如果你有多个数据源需要通过<context:property-placeholder管理，且不愿意放在一个配置文件里，那么一定要加上ignore-unresolvable=“true"-->
    <context:property-placeholder location="classpath:redis.properties" ignore-unresolvable="true" />

    <!--Jedis连接池的相关配置-->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!--新版是maxTotal，旧版是maxActive-->
        <property name="maxTotal">
            <value>${redis.pool.maxActive}</value>
        </property>
        <property name="maxIdle">
            <value>${redis.pool.maxIdle}</value>
        </property>
        <property name="testOnBorrow" value="true"/>
        <property name="testOnReturn" value="true"/>
    </bean>

    <bean id="jedisPool" class="redis.clients.jedis.JedisPool">
        <constructor-arg name="poolConfig" ref="jedisPoolConfig" />
        <constructor-arg name="host" value="${redis.host}" />
        <constructor-arg name="port" value="${redis.port}" type="int" />
        <constructor-arg name="timeout" value="${redis.timeout}" type="int" />
    </bean>
      
</beans>